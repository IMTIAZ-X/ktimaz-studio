name: Android Release

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:     # Manual trigger

jobs:
  secure-release:
    runs-on: ubuntu-latest
    env:
      VERSION_NAME: "1.0"  # Set your version name

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Configure Gradle Properties
        run: |
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx8g -Dfile.encoding=UTF-8 -XX:+UseParallelGC" >> gradle.properties
          echo "android.enableR8.fullMode=true" >> gradle.properties

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build APKs
        env:
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Get Last Release Date
        id: release_check
        run: |
          LAST=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.published_at // empty')
          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "last_release=$LAST" >> $GITHUB_ENV
          echo "now=$NOW" >> $GITHUB_ENV
          if [[ -z "$LAST" ]]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            DAYS=$(python3 -c "from datetime import datetime; print((datetime.strptime('$NOW','%Y-%m-%dT%H:%M:%SZ') - datetime.strptime('$LAST','%Y-%m-%dT%H:%M:%SZ')).days)")
            echo "ready=$([[ $DAYS -ge 7 ]] && echo true || echo false)" >> $GITHUB_OUTPUT
          fi

      - name: Publish GitHub Release
        if: steps.release_check.outputs.ready == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: "Secure Release ${{ env.VERSION_NAME }}"
          tag_name: "v${{ env.VERSION_NAME }}-${{ github.run_number }}"
          files: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/apk/release/output-metadata.json
            app/build/outputs/mapping/release/mapping.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
