name: ANDROID CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build APKs & Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Inject gradle.properties with AndroidX support
        run: |
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Lint (Debug and Release)
        run: ./gradlew lintReportDebug lintReportRelease

      - name: Upload Lint Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: LintReports
          path: app/build/reports/lint-results-*.html

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Enable Gradle Build Scan
        run: |
          echo "gradle.enterprise.buildScan.termsOfServiceUrl=https://gradle.com/terms-of-service" >> gradle.properties
          echo "gradle.enterprise.buildScan.termsOfServiceAgree=YES" >> gradle.properties

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: App-Debug.apk
          path: app/build/outputs/apk/debug/**/*.apk

      - name: Build Release APK
        env:
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: App-Release.apk
          path: app/build/outputs/apk/release/**/*.apk

      - name: Upload ProGuard Mapping (if exists)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ProGuardMapping
          path: app/build/outputs/mapping/release/mapping.txt

      - name: Upload output-metadata.json
        uses: actions/upload-artifact@v4
        with:
          name: OutputMetadata
          path: app/build/outputs/apk/release/output-metadata.json

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel
          script: ./gradlew connectedDebugAndroidTest

      - name: Save Problem Report (if test fails)
        if: failure()
        run: |
          echo "Instrumented tests failed. See logs above." > Problem\ report.txt

      - name: Upload Problem Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ProblemReport
          path: Problem report.txt
